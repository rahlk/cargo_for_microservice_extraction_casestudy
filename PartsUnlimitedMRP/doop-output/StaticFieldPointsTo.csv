[<<immutable-hcontext>>]	<<string-constant>>	<smpl.ordering.OrderingInitializer: java.lang.String s_applicationPath>
[<<immutable-context>>]	<smpl.ordering.repositories.mongodb.MongoQuoteRepository: void <clinit>()>/new java.util.Random/0	<smpl.ordering.repositories.mongodb.MongoQuoteRepository: java.util.Random s_counter>
[<<immutable-context>>]	<smpl.ordering.PropertyHelper: java.util.Properties getPropValues(java.lang.String)>/new java.util.Properties/0	<smpl.ordering.PropertyHelper: java.util.Properties s_props>
[<<immutable-context>>]	<smpl.ordering.PropertyHelper: void <clinit>()>/new java.util.Properties/0	<smpl.ordering.PropertyHelper: java.util.Properties s_props>
[<<immutable-context>>]	<smpl.ordering.repositories.mongodb.MongoOrderRepository: void <clinit>()>/new java.util.concurrent.atomic.AtomicLong/0	<smpl.ordering.repositories.mongodb.MongoOrderRepository: java.util.concurrent.atomic.AtomicLong s_counter>
[<<immutable-context>>]	<smpl.ordering.models.OrderStatus: void <clinit>()>/new smpl.ordering.models.OrderStatus/0	<smpl.ordering.models.OrderStatus: smpl.ordering.models.OrderStatus None>
[<<immutable-context>>]	<org.springframework.boot.loader.archive.ExplodedArchive: void <clinit>()>/new java.util.HashSet/0	<org.springframework.boot.loader.archive.ExplodedArchive: java.util.Set SKIPPED_NAMES>
[<<immutable-context>>]	<org.springframework.boot.loader.archive.ExplodedArchive: void <clinit>()>/new org.springframework.boot.loader.util.AsciiBytes/0	<org.springframework.boot.loader.archive.ExplodedArchive: org.springframework.boot.loader.util.AsciiBytes MANIFEST_ENTRY_NAME>
[<<immutable-context>>]	<smpl.ordering.models.OrderStatus: void <clinit>()>/new smpl.ordering.models.OrderStatus/1	<smpl.ordering.models.OrderStatus: smpl.ordering.models.OrderStatus Created>
[<<immutable-context>>]	<org.springframework.boot.loader.jar.JarEntryData: void <clinit>()>/new org.springframework.boot.loader.util.AsciiBytes/0	<org.springframework.boot.loader.jar.JarEntryData: org.springframework.boot.loader.util.AsciiBytes SLASH>
[<<immutable-context>>]	<org.springframework.boot.loader.data.RandomAccessData$ResourceAccess: void <clinit>()>/new org.springframework.boot.loader.data.RandomAccessData$ResourceAccess/1	<org.springframework.boot.loader.data.RandomAccessData$ResourceAccess: org.springframework.boot.loader.data.RandomAccessData$ResourceAccess PER_READ>
[<<immutable-context>>]	<smpl.ordering.models.OrderStatus: void <clinit>()>/new smpl.ordering.models.OrderStatus/2	<smpl.ordering.models.OrderStatus: smpl.ordering.models.OrderStatus Confirmed>
[<<immutable-context>>]	<smpl.ordering.models.OrderStatus: void <clinit>()>/new smpl.ordering.models.OrderStatus/3	<smpl.ordering.models.OrderStatus: smpl.ordering.models.OrderStatus Started>
[<<immutable-context>>]	<smpl.ordering.models.OrderStatus: void <clinit>()>/new smpl.ordering.models.OrderStatus/4	<smpl.ordering.models.OrderStatus: smpl.ordering.models.OrderStatus Built>
[<<immutable-context>>]	<smpl.ordering.models.OrderStatus: void <clinit>()>/new smpl.ordering.models.OrderStatus/5	<smpl.ordering.models.OrderStatus: smpl.ordering.models.OrderStatus DeliveryConfirmed>
[<<immutable-context>>]	<smpl.ordering.models.OrderStatus: void <clinit>()>/new smpl.ordering.models.OrderStatus/6	<smpl.ordering.models.OrderStatus: smpl.ordering.models.OrderStatus Shipped>
[<<immutable-context>>]	<smpl.ordering.models.OrderStatus: void <clinit>()>/new smpl.ordering.models.OrderStatus/7	<smpl.ordering.models.OrderStatus: smpl.ordering.models.OrderStatus Delivered>
[<<immutable-context>>]	<smpl.ordering.models.OrderStatus: void <clinit>()>/new smpl.ordering.models.OrderStatus/8	<smpl.ordering.models.OrderStatus: smpl.ordering.models.OrderStatus Installed>
[<<immutable-context>>]	<smpl.ordering.models.OrderStatus: void <clinit>()>/new smpl.ordering.models.OrderStatus[]/0	<smpl.ordering.models.OrderStatus: smpl.ordering.models.OrderStatus[] $VALUES>
[<<immutable-context>>]	<org.springframework.boot.loader.data.RandomAccessData$ResourceAccess: void <clinit>()>/new org.springframework.boot.loader.data.RandomAccessData$ResourceAccess/0	<org.springframework.boot.loader.data.RandomAccessData$ResourceAccess: org.springframework.boot.loader.data.RandomAccessData$ResourceAccess ONCE>
[<<immutable-context>>]	<org.springframework.boot.loader.data.RandomAccessData$ResourceAccess: void <clinit>()>/new org.springframework.boot.loader.data.RandomAccessData$ResourceAccess[]/0	<org.springframework.boot.loader.data.RandomAccessData$ResourceAccess: org.springframework.boot.loader.data.RandomAccessData$ResourceAccess[] $VALUES>
[<<immutable-context>>]	<smpl.ordering.repositories.mock.MockQuoteRepository: void <clinit>()>/new java.util.Random/0	<smpl.ordering.repositories.mock.MockQuoteRepository: java.util.Random s_counter>
[<<immutable-context>>]	<org.springframework.boot.loader.JarLauncher: void <clinit>()>/new org.springframework.boot.loader.util.AsciiBytes/0	<org.springframework.boot.loader.JarLauncher: org.springframework.boot.loader.util.AsciiBytes LIB>
[<<immutable-context>>]	<org.springframework.boot.loader.archive.JarFileArchive: void <clinit>()>/new org.springframework.boot.loader.util.AsciiBytes/0	<org.springframework.boot.loader.archive.JarFileArchive: org.springframework.boot.loader.util.AsciiBytes UNPACK_MARKER>
[<<immutable-context>>]	<org.springframework.boot.loader.jar.JarFile: void <clinit>()>/new org.springframework.boot.loader.util.AsciiBytes/0	<org.springframework.boot.loader.jar.JarFile: org.springframework.boot.loader.util.AsciiBytes META_INF>
[<<immutable-context>>]	<org.springframework.boot.loader.jar.JarFile: void <clinit>()>/new org.springframework.boot.loader.util.AsciiBytes/1	<org.springframework.boot.loader.jar.JarFile: org.springframework.boot.loader.util.AsciiBytes MANIFEST_MF>
[<<immutable-context>>]	<org.springframework.boot.loader.jar.JarFile: void <clinit>()>/new org.springframework.boot.loader.util.AsciiBytes/2	<org.springframework.boot.loader.jar.JarFile: org.springframework.boot.loader.util.AsciiBytes SIGNATURE_FILE_EXTENSION>
[<<immutable-context>>]	<org.springframework.boot.loader.jar.JarFile: void <clinit>()>/new org.springframework.boot.loader.util.AsciiBytes/3	<org.springframework.boot.loader.jar.JarFile: org.springframework.boot.loader.util.AsciiBytes SLASH>
[<<immutable-context>>]	<smpl.ordering.OrderingConfiguration: void <init>()>/new java.lang.ThreadLocal/0	<smpl.ordering.OrderingConfiguration: java.lang.ThreadLocal t_ambientTelemetryClient>
[<<immutable-context>>]	<org.springframework.boot.loader.LaunchedURLClassLoader: org.springframework.boot.loader.LaunchedURLClassLoader$LockProvider setupLockProvider()>/new org.springframework.boot.loader.LaunchedURLClassLoader$Java7LockProvider/0	<org.springframework.boot.loader.LaunchedURLClassLoader: org.springframework.boot.loader.LaunchedURLClassLoader$LockProvider LOCK_PROVIDER>
[<<immutable-context>>]	<org.springframework.boot.loader.LaunchedURLClassLoader: org.springframework.boot.loader.LaunchedURLClassLoader$LockProvider setupLockProvider()>/new org.springframework.boot.loader.LaunchedURLClassLoader$LockProvider/0	<org.springframework.boot.loader.LaunchedURLClassLoader: org.springframework.boot.loader.LaunchedURLClassLoader$LockProvider LOCK_PROVIDER>
[<<immutable-hcontext>>]	<org.springframework.boot.loader.jar.Bytes: void <clinit>()>/new byte[]/0	<org.springframework.boot.loader.jar.Bytes: byte[] EMPTY_BYTES>
[<<immutable-context>>]	<smpl.ordering.repositories.RepositoryFactory: void reset(java.lang.String)>/new smpl.ordering.repositories.RepositoryFactory/0	<smpl.ordering.repositories.RepositoryFactory: smpl.ordering.repositories.RepositoryFactory s_factory>
[<<immutable-context>>]	<smpl.ordering.repositories.mock.MockOrderRepository: void <clinit>()>/new java.util.concurrent.atomic.AtomicLong/0	<smpl.ordering.repositories.mock.MockOrderRepository: java.util.concurrent.atomic.AtomicLong s_counter>

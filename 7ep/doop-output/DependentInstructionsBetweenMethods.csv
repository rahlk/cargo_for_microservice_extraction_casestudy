[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.mathematics.TailRecursive: java.util.function.BiFunction tailie(java.util.function.BiFunction,java.util.function.UnaryOperator,java.util.function.Predicate,java.util.function.Function)>	<com.coveros.training.mathematics.AckermannIterative$$: void <clinit>()>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.mathematics.Calculator: int add(int,int)>	<com.coveros.training.mathematics.MathServlet: void setResultToSum(javax.servlet.http.HttpServletRequest,int,int)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.mathematics.FibonacciIterative: java.math.BigInteger fibAlgo1(long)>	<com.coveros.training.mathematics.FibServlet: void tailRecursiveAlgo1Calc(javax.servlet.http.HttpServletRequest,int)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.mathematics.FibonacciIterative: java.math.BigInteger fibAlgo2(int)>	<com.coveros.training.mathematics.FibServlet: void tailRecursiveAlgo2Calc(javax.servlet.http.HttpServletRequest,int)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.mathematics.MathServlet: int putNumberInRequest(java.lang.String,javax.servlet.http.HttpServletRequest)>	<com.coveros.training.mathematics.MathServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.library.LibraryBorrowerListSearchServlet: java.lang.String searchById(java.lang.String)>	<com.coveros.training.library.LibraryBorrowerListSearchServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.mathematics.AckermannIterative$$: java.math.BigInteger main(java.math.BigInteger,java.math.BigInteger)>	<com.coveros.training.mathematics.AckermannIterative: java.math.BigInteger calculate(int,int)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.mathematics.AckServlet: int putNumberInRequest(java.lang.String,javax.servlet.http.HttpServletRequest)>	<com.coveros.training.mathematics.AckServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.mathematics.Ackermann: java.math.BigInteger ack(java.math.BigInteger,java.math.BigInteger)>	<com.coveros.training.mathematics.Ackermann: java.math.BigInteger calculate(int,int)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.mathematics.Ackermann: java.math.BigInteger calculate(int,int)>	<com.coveros.training.mathematics.AckServlet: void regularRecursive(javax.servlet.http.HttpServletRequest,int,int)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.mathematics.Ackermann: java.math.BigInteger calculate(int,int)>	<com.coveros.training.mathematics.Ackermann: java.math.BigInteger ack(java.math.BigInteger,java.math.BigInteger)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.mathematics.FibServlet: int putNumberInRequest(java.lang.String,javax.servlet.http.HttpServletRequest)>	<com.coveros.training.mathematics.FibServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.mathematics.FibServlet: void tailRecursiveAlgo1Calc(javax.servlet.http.HttpServletRequest,int)>	<com.coveros.training.mathematics.FibonacciIterative: java.math.BigInteger fibAlgo1(long)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.mathematics.FibServlet: void defaultRecursiveCalculation(javax.servlet.http.HttpServletRequest,int)>	<com.coveros.training.mathematics.Fibonacci: long calculate(long)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.authentication.RegistrationUtils: com.coveros.training.authentication.domainobjects.RegistrationResult processRegistration(java.lang.String,java.lang.String)>	<com.coveros.training.authentication.RegisterServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.authentication.LoginUtils: boolean isUserRegistered(java.lang.String,java.lang.String)>	<com.coveros.training.authentication.LoginServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(java.lang.String,java.lang.String,java.sql.Date)>	<com.coveros.training.library.LibraryLendServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults registerBorrower(java.lang.String)>	<com.coveros.training.library.LibraryRegisterBorrowerServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults registerBook(java.lang.String)>	<com.coveros.training.library.LibraryRegisterBookServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerByName(java.lang.String)>	<com.coveros.training.library.LibraryBorrowerListSearchServlet: java.lang.String searchByName(java.lang.String)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookByTitle(java.lang.String)>	<com.coveros.training.library.LibraryBookListSearchServlet: java.lang.String searchByTitle(java.lang.String)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookById(long)>	<com.coveros.training.library.LibraryBookListSearchServlet: java.lang.String searchById(java.lang.String)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerById(long)>	<com.coveros.training.library.LibraryBorrowerListSearchServlet: java.lang.String searchById(java.lang.String)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.library.LibraryBookListSearchServlet: java.lang.String searchById(java.lang.String)>	<com.coveros.training.library.LibraryBookListSearchServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.mathematics.Fibonacci: long calculate(long)>	<com.coveros.training.mathematics.FibServlet: void defaultRecursiveCalculation(javax.servlet.http.HttpServletRequest,int)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.mathematics.AckermannIterative: java.math.BigInteger calculate(int,int)>	<com.coveros.training.mathematics.AckermannIterative$$: java.math.BigInteger main(java.math.BigInteger,java.math.BigInteger)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.mathematics.AckermannIterative: java.math.BigInteger calculate(int,int)>	<com.coveros.training.mathematics.AckServlet: void tailRecursive(javax.servlet.http.HttpServletRequest,int,int)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryLendServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryRegisterBookServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryBorrowerListSearchServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryRegisterBorrowerServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.authentication.LoginServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.authentication.RegisterServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.persistence.DbServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryBookListSearchServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.library.LibraryLendServlet: java.sql.Date getDateNow()>	<com.coveros.training.library.LibraryLendServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.library.LibraryBorrowerListSearchServlet: java.lang.String listAllBorrowers()>	<com.coveros.training.library.LibraryBorrowerListSearchServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.library.LibraryUtils: java.util.List listAllBooks()>	<com.coveros.training.library.LibraryBookListSearchServlet: java.lang.String listAllBooks()>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.library.LibraryUtils: java.util.List listAllBorrowers()>	<com.coveros.training.library.LibraryBorrowerListSearchServlet: java.lang.String listAllBorrowers()>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.library.LibraryUtils: java.util.List listAvailableBooks()>	<com.coveros.training.library.LibraryBookListAvailableServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<<immutable-context>>, <<immutable-context>>]	<com.coveros.training.library.LibraryBookListSearchServlet: java.lang.String listAllBooks()>	<com.coveros.training.library.LibraryBookListSearchServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(java.lang.String,java.lang.String,java.sql.Date)>/new com.coveros.training.library.domainobjects.Borrower/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.domainobjects.Borrower: void <init>(long,java.lang.String)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.MathServlet::MockObject]	<com.coveros.training.mathematics.Calculator: int add(int,int)>	<com.coveros.training.mathematics.MathServlet: void setResultToSum(javax.servlet.http.HttpServletRequest,int,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.MathServlet::MockObject]	<com.coveros.training.mathematics.MathServlet: int putNumberInRequest(java.lang.String,javax.servlet.http.HttpServletRequest)>	<com.coveros.training.mathematics.Calculator: int add(int,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.MathServlet::MockObject]	<com.coveros.training.mathematics.MathServlet: int putNumberInRequest(java.lang.String,javax.servlet.http.HttpServletRequest)>	<com.coveros.training.mathematics.MathServlet: void setResultToSum(javax.servlet.http.HttpServletRequest,int,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.MathServlet::MockObject]	<com.coveros.training.mathematics.MathServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>	<com.coveros.training.mathematics.Calculator: int add(int,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.MathServlet::MockObject]	<com.coveros.training.mathematics.MathServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>	<com.coveros.training.mathematics.MathServlet: void setResultToSum(javax.servlet.http.HttpServletRequest,int,int)>
[<<immutable-hcontext>>, com.coveros.training.library.LibraryBorrowerListSearchServlet::MockObject]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerByName(java.lang.String)>	<com.coveros.training.library.LibraryBorrowerListSearchServlet: java.lang.String searchByName(java.lang.String)>
[<<immutable-hcontext>>, com.coveros.training.library.LibraryBorrowerListSearchServlet::MockObject]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerById(long)>	<com.coveros.training.library.LibraryBorrowerListSearchServlet: java.lang.String searchById(java.lang.String)>
[<<immutable-hcontext>>, com.coveros.training.library.LibraryBorrowerListSearchServlet::MockObject]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryBorrowerListSearchServlet: java.lang.String searchByName(java.lang.String)>
[<<immutable-hcontext>>, com.coveros.training.library.LibraryBorrowerListSearchServlet::MockObject]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryBorrowerListSearchServlet: java.lang.String searchById(java.lang.String)>
[<<immutable-hcontext>>, com.coveros.training.library.LibraryBorrowerListSearchServlet::MockObject]	<com.coveros.training.library.LibraryUtils: java.util.List listAllBorrowers()>	<com.coveros.training.library.LibraryBorrowerListSearchServlet: java.lang.String listAllBorrowers()>
[<<immutable-hcontext>>, com.coveros.training.mathematics.AckServlet::MockObject]	<com.coveros.training.mathematics.AckermannIterative$$: java.math.BigInteger main(java.math.BigInteger,java.math.BigInteger)>	<com.coveros.training.mathematics.AckermannIterative: java.math.BigInteger calculate(int,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.AckServlet::MockObject]	<com.coveros.training.mathematics.AckServlet: int putNumberInRequest(java.lang.String,javax.servlet.http.HttpServletRequest)>	<com.coveros.training.mathematics.AckServlet: void regularRecursive(javax.servlet.http.HttpServletRequest,int,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.AckServlet::MockObject]	<com.coveros.training.mathematics.AckServlet: int putNumberInRequest(java.lang.String,javax.servlet.http.HttpServletRequest)>	<com.coveros.training.mathematics.AckServlet: void tailRecursive(javax.servlet.http.HttpServletRequest,int,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.AckServlet::MockObject]	<com.coveros.training.mathematics.AckServlet: int putNumberInRequest(java.lang.String,javax.servlet.http.HttpServletRequest)>	<com.coveros.training.mathematics.Ackermann: java.math.BigInteger calculate(int,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.AckServlet::MockObject]	<com.coveros.training.mathematics.AckServlet: int putNumberInRequest(java.lang.String,javax.servlet.http.HttpServletRequest)>	<com.coveros.training.mathematics.AckermannIterative: java.math.BigInteger calculate(int,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.AckServlet::MockObject]	<com.coveros.training.mathematics.AckServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>	<com.coveros.training.mathematics.AckServlet: void regularRecursive(javax.servlet.http.HttpServletRequest,int,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.AckServlet::MockObject]	<com.coveros.training.mathematics.AckServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>	<com.coveros.training.mathematics.AckServlet: void tailRecursive(javax.servlet.http.HttpServletRequest,int,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.AckServlet::MockObject]	<com.coveros.training.mathematics.AckServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>	<com.coveros.training.mathematics.Ackermann: java.math.BigInteger calculate(int,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.AckServlet::MockObject]	<com.coveros.training.mathematics.AckServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>	<com.coveros.training.mathematics.AckermannIterative: java.math.BigInteger calculate(int,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.AckServlet::MockObject]	<com.coveros.training.mathematics.Ackermann: java.math.BigInteger ack(java.math.BigInteger,java.math.BigInteger)>	<com.coveros.training.mathematics.Ackermann: java.math.BigInteger calculate(int,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.AckServlet::MockObject]	<com.coveros.training.mathematics.Ackermann: java.math.BigInteger calculate(int,int)>	<com.coveros.training.mathematics.AckServlet: void regularRecursive(javax.servlet.http.HttpServletRequest,int,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.AckServlet::MockObject]	<com.coveros.training.mathematics.Ackermann: java.math.BigInteger calculate(int,int)>	<com.coveros.training.mathematics.Ackermann: java.math.BigInteger ack(java.math.BigInteger,java.math.BigInteger)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.AckServlet::MockObject]	<com.coveros.training.mathematics.AckermannIterative: java.math.BigInteger calculate(int,int)>	<com.coveros.training.mathematics.AckermannIterative$$: java.math.BigInteger main(java.math.BigInteger,java.math.BigInteger)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.AckServlet::MockObject]	<com.coveros.training.mathematics.AckermannIterative: java.math.BigInteger calculate(int,int)>	<com.coveros.training.mathematics.AckServlet: void tailRecursive(javax.servlet.http.HttpServletRequest,int,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.FibServlet::MockObject]	<com.coveros.training.mathematics.FibonacciIterative: java.math.BigInteger fibAlgo1(long)>	<com.coveros.training.mathematics.FibServlet: void tailRecursiveAlgo1Calc(javax.servlet.http.HttpServletRequest,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.FibServlet::MockObject]	<com.coveros.training.mathematics.FibonacciIterative: java.math.BigInteger fibAlgo2(int)>	<com.coveros.training.mathematics.FibServlet: void tailRecursiveAlgo2Calc(javax.servlet.http.HttpServletRequest,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.FibServlet::MockObject]	<com.coveros.training.mathematics.FibServlet: int putNumberInRequest(java.lang.String,javax.servlet.http.HttpServletRequest)>	<com.coveros.training.mathematics.FibonacciIterative: java.math.BigInteger fibAlgo2(int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.FibServlet::MockObject]	<com.coveros.training.mathematics.FibServlet: int putNumberInRequest(java.lang.String,javax.servlet.http.HttpServletRequest)>	<com.coveros.training.mathematics.FibServlet: void tailRecursiveAlgo2Calc(javax.servlet.http.HttpServletRequest,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.FibServlet::MockObject]	<com.coveros.training.mathematics.FibServlet: int putNumberInRequest(java.lang.String,javax.servlet.http.HttpServletRequest)>	<com.coveros.training.mathematics.FibServlet: void tailRecursiveAlgo1Calc(javax.servlet.http.HttpServletRequest,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.FibServlet::MockObject]	<com.coveros.training.mathematics.FibServlet: int putNumberInRequest(java.lang.String,javax.servlet.http.HttpServletRequest)>	<com.coveros.training.mathematics.FibServlet: void defaultRecursiveCalculation(javax.servlet.http.HttpServletRequest,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.FibServlet::MockObject]	<com.coveros.training.mathematics.FibServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>	<com.coveros.training.mathematics.FibonacciIterative: java.math.BigInteger fibAlgo2(int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.FibServlet::MockObject]	<com.coveros.training.mathematics.FibServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>	<com.coveros.training.mathematics.FibServlet: void tailRecursiveAlgo2Calc(javax.servlet.http.HttpServletRequest,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.FibServlet::MockObject]	<com.coveros.training.mathematics.FibServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>	<com.coveros.training.mathematics.FibServlet: void tailRecursiveAlgo1Calc(javax.servlet.http.HttpServletRequest,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.FibServlet::MockObject]	<com.coveros.training.mathematics.FibServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>	<com.coveros.training.mathematics.FibServlet: void defaultRecursiveCalculation(javax.servlet.http.HttpServletRequest,int)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.FibServlet::MockObject]	<com.coveros.training.mathematics.FibServlet: void tailRecursiveAlgo1Calc(javax.servlet.http.HttpServletRequest,int)>	<com.coveros.training.mathematics.FibonacciIterative: java.math.BigInteger fibAlgo1(long)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.FibServlet::MockObject]	<com.coveros.training.mathematics.FibServlet: void defaultRecursiveCalculation(javax.servlet.http.HttpServletRequest,int)>	<com.coveros.training.mathematics.Fibonacci: long calculate(long)>
[<<immutable-hcontext>>, com.coveros.training.mathematics.FibServlet::MockObject]	<com.coveros.training.mathematics.Fibonacci: long calculate(long)>	<com.coveros.training.mathematics.FibServlet: void defaultRecursiveCalculation(javax.servlet.http.HttpServletRequest,int)>
[<<immutable-hcontext>>, com.coveros.training.library.LibraryBookListSearchServlet::MockObject]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookByTitle(java.lang.String)>	<com.coveros.training.library.LibraryBookListSearchServlet: java.lang.String searchByTitle(java.lang.String)>
[<<immutable-hcontext>>, com.coveros.training.library.LibraryBookListSearchServlet::MockObject]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookById(long)>	<com.coveros.training.library.LibraryBookListSearchServlet: java.lang.String searchById(java.lang.String)>
[<<immutable-hcontext>>, com.coveros.training.library.LibraryBookListSearchServlet::MockObject]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryBookListSearchServlet: java.lang.String searchByTitle(java.lang.String)>
[<<immutable-hcontext>>, com.coveros.training.library.LibraryBookListSearchServlet::MockObject]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryBookListSearchServlet: java.lang.String searchById(java.lang.String)>
[<<immutable-hcontext>>, com.coveros.training.library.LibraryBookListSearchServlet::MockObject]	<com.coveros.training.library.LibraryUtils: java.util.List listAllBooks()>	<com.coveros.training.library.LibraryBookListSearchServlet: java.lang.String listAllBooks()>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(java.lang.String,java.lang.String,java.sql.Date)>/new com.coveros.training.library.domainobjects.Book/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.domainobjects.Book: void <init>(long,java.lang.String)>
[<<immutable-hcontext>>, com.coveros.training.persistence.PersistenceLayer::MockObject]	<com.coveros.training.persistence.PersistenceLayer: void <init>()>	<com.coveros.training.persistence.PersistenceLayer: void <init>(javax.sql.DataSource)>
[<com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertOnPreparedStatement(com.coveros.training.persistence.SqlData,java.sql.PreparedStatement)>
[<com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>
[<com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>	<com.coveros.training.persistence.PersistenceLayer: long saveNewBook(java.lang.String)>
[<com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertOnPreparedStatement(com.coveros.training.persistence.SqlData,java.sql.PreparedStatement)>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertOnPreparedStatement(com.coveros.training.persistence.SqlData,java.sql.PreparedStatement)>
[<com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>
[<com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function throwingFunctionWrapper(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function throwingFunctionWrapper(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>
[<com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewBook(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewBook(java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void StringMustNotBeNullOrEmpty(java.lang.String[])>
[<com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void StringMustNotBeNullOrEmpty(java.lang.String[])>
[<com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: long saveNewBook(java.lang.String)>
[<com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>
[<com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: void <init>()>	<com.coveros.training.persistence.PersistenceLayer: void <init>(javax.sql.DataSource)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.LibraryLendServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(java.lang.String,java.lang.String,java.sql.Date)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.LibraryLendServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.LibraryLendServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>	<com.coveros.training.library.LibraryUtils: void createLoan(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.persistence.PersistenceLayer: long createLoan(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>	<com.coveros.training.library.LibraryUtils: void createLoan(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerByName(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookByTitle(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForLoanByBook(com.coveros.training.library.domainobjects.Book)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Loan searchForLoanByBook(com.coveros.training.library.domainobjects.Book)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(java.lang.String,java.lang.String,java.sql.Date)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(java.lang.String,java.lang.String,java.sql.Date)>	<com.coveros.training.library.LibraryUtils: void createLoan(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(java.lang.String,java.lang.String,java.sql.Date)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Loan searchForLoanByBook(com.coveros.training.library.domainobjects.Book)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(java.lang.String,java.lang.String,java.sql.Date)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Loan searchForLoanByBook(com.coveros.training.library.domainobjects.Book)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerByName(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(java.lang.String,java.lang.String,java.sql.Date)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookByTitle(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(java.lang.String,java.lang.String,java.sql.Date)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(java.lang.String,java.lang.String,java.sql.Date)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerByName(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookByTitle(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.domainobjects.Loan: com.coveros.training.library.domainobjects.Loan createEmpty()>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Loan searchForLoanByBook(com.coveros.training.library.domainobjects.Book)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.LibraryLendServlet: java.sql.Date getDateNow()>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(java.lang.String,java.lang.String,java.sql.Date)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.LibraryLendServlet: java.sql.Date getDateNow()>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.LibraryLendServlet: java.sql.Date getDateNow()>	<com.coveros.training.library.LibraryUtils: void createLoan(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.domainobjects.Book: com.coveros.training.library.domainobjects.Book createEmpty()>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookByTitle(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.domainobjects.Book: com.coveros.training.library.domainobjects.Book createEmpty()>	<com.coveros.training.library.domainobjects.Loan: com.coveros.training.library.domainobjects.Loan createEmpty()>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.domainobjects.Borrower: com.coveros.training.library.domainobjects.Borrower createEmpty()>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerByName(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.domainobjects.Borrower: com.coveros.training.library.domainobjects.Borrower createEmpty()>	<com.coveros.training.library.domainobjects.Loan: com.coveros.training.library.domainobjects.Loan createEmpty()>
[<<immutable-context>>, <com.coveros.training.tomcat.WebAppListener: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: void <init>()>	<com.coveros.training.persistence.PersistenceLayer: void <init>(javax.sql.DataSource)>
[<<immutable-context>>, <com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewBook(java.lang.String)>	<com.coveros.training.library.LibraryUtils: void saveNewBook(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookByTitle(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookByTitle(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults registerBook(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults registerBook(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryUtils: void saveNewBook(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookByTitle(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryRegisterBookServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.domainobjects.Book: com.coveros.training.library.domainobjects.Book createEmpty()>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookByTitle(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerByName(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowersById(long)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerById(long)>
[<<immutable-context>>, <com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.LibraryBorrowerListSearchServlet: java.lang.String searchById(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerById(long)>
[<<immutable-context>>, <com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerByName(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional listAllBorrowers()>	<com.coveros.training.library.LibraryUtils: java.util.List listAllBorrowers()>
[<<immutable-context>>, <com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.domainobjects.Borrower: com.coveros.training.library.domainobjects.Borrower createEmpty()>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerByName(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.domainobjects.Borrower: com.coveros.training.library.domainobjects.Borrower createEmpty()>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerById(long)>
[<<immutable-context>>, <com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewBorrower(java.lang.String)>	<com.coveros.training.library.LibraryUtils: void saveNewBorrower(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerByName(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerByName(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults registerBorrower(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults registerBorrower(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryUtils: void saveNewBorrower(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerByName(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.domainobjects.Borrower: com.coveros.training.library.domainobjects.Borrower createEmpty()>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults registerBorrower(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.domainobjects.Borrower: com.coveros.training.library.domainobjects.Borrower createEmpty()>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Borrower searchForBorrowerByName(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryBookListAvailableServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional listAvailableBooks()>	<com.coveros.training.library.LibraryUtils: java.util.List listAvailableBooks()>
[<<immutable-context>>, <com.coveros.training.authentication.LoginServlet: void <clinit>()>/new com.coveros.training.authentication.LoginUtils/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional areCredentialsValid(java.lang.String,java.lang.String)>	<com.coveros.training.authentication.LoginUtils: boolean isUserRegistered(java.lang.String,java.lang.String)>
[<<immutable-context>>, <com.coveros.training.authentication.LoginServlet: void <clinit>()>/new com.coveros.training.authentication.LoginUtils/0]	<com.coveros.training.authentication.LoginUtils: boolean isUserRegistered(java.lang.String,java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void StringMustNotBeNullOrEmpty(java.lang.String[])>
[<<immutable-context>>, <com.coveros.training.authentication.LoginServlet: void <clinit>()>/new com.coveros.training.authentication.LoginUtils/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.authentication.LoginUtils: boolean isUserRegistered(java.lang.String,java.lang.String)>
[<<immutable-context>>, <com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0]	<com.coveros.training.authentication.domainobjects.PasswordResult: com.coveros.training.authentication.domainobjects.PasswordResult createDefault(com.coveros.training.authentication.domainobjects.PasswordResultEnums)>	<com.coveros.training.authentication.RegistrationUtils: com.coveros.training.authentication.domainobjects.PasswordResult isPasswordGood(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewUser(java.lang.String)>	<com.coveros.training.authentication.RegistrationUtils: void saveToDatabase(java.lang.String,java.lang.String)>
[<<immutable-context>>, <com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForUserByName(java.lang.String)>	<com.coveros.training.authentication.RegistrationUtils: boolean isUserInDatabase(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0]	<com.coveros.training.authentication.RegistrationUtils: com.coveros.training.authentication.domainobjects.RegistrationResult processRegistration(java.lang.String,java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void StringMustNotBeNullOrEmpty(java.lang.String[])>
[<<immutable-context>>, <com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0]	<com.coveros.training.authentication.RegistrationUtils: com.coveros.training.authentication.domainobjects.PasswordResult isPasswordGood(java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void StringMustNotBeNullOrEmpty(java.lang.String[])>
[<<immutable-context>>, <com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0]	<com.coveros.training.authentication.RegistrationUtils: com.coveros.training.authentication.domainobjects.PasswordResult isPasswordGood(java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void mustBeTrueAtThisPoint(boolean,java.lang.String)>
[<<immutable-context>>, <com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0]	<com.coveros.training.authentication.RegistrationUtils: com.coveros.training.authentication.domainobjects.PasswordResult isPasswordGood(java.lang.String)>	<com.coveros.training.authentication.RegistrationUtils: com.coveros.training.authentication.domainobjects.RegistrationResult processRegistration(java.lang.String,java.lang.String)>
[<<immutable-context>>, <com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0]	<com.coveros.training.authentication.RegistrationUtils: boolean isUserInDatabase(java.lang.String)>	<com.coveros.training.authentication.RegistrationUtils: com.coveros.training.authentication.domainobjects.RegistrationResult processRegistration(java.lang.String,java.lang.String)>
[<<immutable-context>>, <com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.authentication.RegistrationUtils: com.coveros.training.authentication.domainobjects.RegistrationResult processRegistration(java.lang.String,java.lang.String)>
[<<immutable-context>>, <com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.authentication.RegistrationUtils: com.coveros.training.authentication.domainobjects.PasswordResult isPasswordGood(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.authentication.RegistrationUtils: boolean isUserInDatabase(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.authentication.RegistrationUtils: void saveToDatabase(java.lang.String,java.lang.String)>
[<<immutable-context>>, <com.coveros.training.persistence.DbServlet: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: void <init>()>	<com.coveros.training.persistence.PersistenceLayer: void <init>(javax.sql.DataSource)>
[<<immutable-context>>, <com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookByTitle(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksById(long)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookById(long)>
[<<immutable-context>>, <com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.LibraryBookListSearchServlet: java.lang.String searchById(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookById(long)>
[<<immutable-context>>, <com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookByTitle(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional listAllBooks()>	<com.coveros.training.library.LibraryUtils: java.util.List listAllBooks()>
[<<immutable-context>>, <com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.domainobjects.Book: com.coveros.training.library.domainobjects.Book createEmpty()>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookByTitle(java.lang.String)>
[<<immutable-context>>, <com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0]	<com.coveros.training.library.domainobjects.Book: com.coveros.training.library.domainobjects.Book createEmpty()>	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.Book searchForBookById(long)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.domainobjects.PasswordResult: com.coveros.training.authentication.domainobjects.PasswordResult createDefault(com.coveros.training.authentication.domainobjects.PasswordResultEnums)>/new com.coveros.training.authentication.domainobjects.PasswordResult/0]	<com.coveros.training.authentication.domainobjects.PasswordResult: com.coveros.training.authentication.domainobjects.PasswordResult createDefault(com.coveros.training.authentication.domainobjects.PasswordResultEnums)>	<com.coveros.training.authentication.domainobjects.PasswordResult: void <init>(com.coveros.training.authentication.domainobjects.PasswordResultEnums,java.lang.Double,java.lang.String,java.lang.String,java.lang.String)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.library.LibraryLendServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>	<com.coveros.training.persistence.PersistenceLayer: long createLoan(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertOnPreparedStatement(com.coveros.training.persistence.SqlData,java.sql.PreparedStatement)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>	<com.coveros.training.persistence.PersistenceLayer: long createLoan(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertOnPreparedStatement(com.coveros.training.persistence.SqlData,java.sql.PreparedStatement)>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertOnPreparedStatement(com.coveros.training.persistence.SqlData,java.sql.PreparedStatement)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForLoanByBook(com.coveros.training.library.domainobjects.Book)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function throwingFunctionWrapper(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function throwingFunctionWrapper(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForLoanByBook(com.coveros.training.library.domainobjects.Book)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long createLoan(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void StringMustNotBeNullOrEmpty(java.lang.String[])>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void StringMustNotBeNullOrEmpty(java.lang.String[])>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForLoanByBook(com.coveros.training.library.domainobjects.Book)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(java.lang.String,java.lang.String,java.sql.Date)>	<com.coveros.training.persistence.PersistenceLayer: long createLoan(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.library.LibraryUtils: com.coveros.training.library.domainobjects.LibraryActionResults lendBook(java.lang.String,java.lang.String,java.sql.Date)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForLoanByBook(com.coveros.training.library.domainobjects.Book)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.library.LibraryLendServlet: java.sql.Date getDateNow()>	<com.coveros.training.persistence.PersistenceLayer: long createLoan(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: void <init>()>	<com.coveros.training.persistence.PersistenceLayer: void <init>(javax.sql.DataSource)>
[<com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>
[<com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowersById(long)>
[<com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional listAllBorrowers()>
[<com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function throwingFunctionWrapper(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function throwingFunctionWrapper(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>
[<com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowersById(long)>
[<com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional listAllBorrowers()>
[<com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void StringMustNotBeNullOrEmpty(java.lang.String[])>
[<com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.library.LibraryBorrowerListSearchServlet: java.lang.String searchById(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowersById(long)>
[<com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.library.LibraryBorrowerListSearchServlet: java.lang.String searchById(java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void IntParameterMustBePositive(long)>
[<com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>
[<com.coveros.training.library.LibraryBorrowerListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: void <init>()>	<com.coveros.training.persistence.PersistenceLayer: void <init>(javax.sql.DataSource)>
[<com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertOnPreparedStatement(com.coveros.training.persistence.SqlData,java.sql.PreparedStatement)>
[<com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>
[<com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>	<com.coveros.training.persistence.PersistenceLayer: long saveNewBorrower(java.lang.String)>
[<com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertOnPreparedStatement(com.coveros.training.persistence.SqlData,java.sql.PreparedStatement)>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertOnPreparedStatement(com.coveros.training.persistence.SqlData,java.sql.PreparedStatement)>
[<com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>
[<com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function throwingFunctionWrapper(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function throwingFunctionWrapper(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>
[<com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewBorrower(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewBorrower(java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void StringMustNotBeNullOrEmpty(java.lang.String[])>
[<com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void StringMustNotBeNullOrEmpty(java.lang.String[])>
[<com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: long saveNewBorrower(java.lang.String)>
[<com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>
[<com.coveros.training.library.LibraryRegisterBorrowerServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: void <init>()>	<com.coveros.training.persistence.PersistenceLayer: void <init>(javax.sql.DataSource)>
[<com.coveros.training.library.LibraryBookListAvailableServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional listBooks(java.lang.String,java.lang.String)>
[<com.coveros.training.library.LibraryBookListAvailableServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function throwingFunctionWrapper(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.library.LibraryBookListAvailableServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function throwingFunctionWrapper(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.library.LibraryBookListAvailableServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional listBooks(java.lang.String,java.lang.String)>
[<com.coveros.training.library.LibraryBookListAvailableServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional listBooks(java.lang.String,java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional listAvailableBooks()>
[<com.coveros.training.library.LibraryBookListAvailableServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: void <init>()>	<com.coveros.training.persistence.PersistenceLayer: void <init>(javax.sql.DataSource)>
[<com.coveros.training.authentication.LoginServlet: void <clinit>()>/new com.coveros.training.authentication.LoginUtils/0, <com.coveros.training.authentication.LoginUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional areCredentialsValid(java.lang.String,java.lang.String)>
[<com.coveros.training.authentication.LoginServlet: void <clinit>()>/new com.coveros.training.authentication.LoginUtils/0, <com.coveros.training.authentication.LoginUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function throwingFunctionWrapper(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.authentication.LoginServlet: void <clinit>()>/new com.coveros.training.authentication.LoginUtils/0, <com.coveros.training.authentication.LoginUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function throwingFunctionWrapper(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.authentication.LoginServlet: void <clinit>()>/new com.coveros.training.authentication.LoginUtils/0, <com.coveros.training.authentication.LoginUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional areCredentialsValid(java.lang.String,java.lang.String)>
[<com.coveros.training.authentication.LoginServlet: void <clinit>()>/new com.coveros.training.authentication.LoginUtils/0, <com.coveros.training.authentication.LoginUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.lang.String createHashedValueFromPassword(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional areCredentialsValid(java.lang.String,java.lang.String)>
[<com.coveros.training.authentication.LoginServlet: void <clinit>()>/new com.coveros.training.authentication.LoginUtils/0, <com.coveros.training.authentication.LoginUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.lang.String createHashedValueFromPassword(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.lang.String bytesToHex(byte[])>
[<com.coveros.training.authentication.LoginServlet: void <clinit>()>/new com.coveros.training.authentication.LoginUtils/0, <com.coveros.training.authentication.LoginUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.lang.String createHashedValueFromPassword(java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void StringMustNotBeNullOrEmpty(java.lang.String[])>
[<com.coveros.training.authentication.LoginServlet: void <clinit>()>/new com.coveros.training.authentication.LoginUtils/0, <com.coveros.training.authentication.LoginUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.lang.String bytesToHex(byte[])>	<com.coveros.training.persistence.PersistenceLayer: java.lang.String createHashedValueFromPassword(java.lang.String)>
[<com.coveros.training.authentication.LoginServlet: void <clinit>()>/new com.coveros.training.authentication.LoginUtils/0, <com.coveros.training.authentication.LoginUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional areCredentialsValid(java.lang.String,java.lang.String)>
[<com.coveros.training.authentication.LoginServlet: void <clinit>()>/new com.coveros.training.authentication.LoginUtils/0, <com.coveros.training.authentication.LoginUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.lang.String createHashedValueFromPassword(java.lang.String)>
[<com.coveros.training.authentication.LoginServlet: void <clinit>()>/new com.coveros.training.authentication.LoginUtils/0, <com.coveros.training.authentication.LoginUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: void <init>()>	<com.coveros.training.persistence.PersistenceLayer: void <init>(javax.sql.DataSource)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: void executeUpdateTemplate(java.lang.String,java.lang.String,java.lang.Object[])>	<com.coveros.training.persistence.PersistenceLayer: void executeUpdateOnPreparedStatement(com.coveros.training.persistence.SqlData,java.sql.PreparedStatement)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: void executeUpdateTemplate(java.lang.String,java.lang.String,java.lang.Object[])>	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertOnPreparedStatement(com.coveros.training.persistence.SqlData,java.sql.PreparedStatement)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>	<com.coveros.training.persistence.PersistenceLayer: long saveNewUser(java.lang.String)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertOnPreparedStatement(com.coveros.training.persistence.SqlData,java.sql.PreparedStatement)>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>	<com.coveros.training.persistence.PersistenceLayer: void executeUpdateTemplate(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertOnPreparedStatement(com.coveros.training.persistence.SqlData,java.sql.PreparedStatement)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>	<com.coveros.training.persistence.PersistenceLayer: void executeUpdateOnPreparedStatement(com.coveros.training.persistence.SqlData,java.sql.PreparedStatement)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForUserByName(java.lang.String)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function throwingFunctionWrapper(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function throwingFunctionWrapper(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForUserByName(java.lang.String)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewUser(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewUser(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: void updateUserWithPassword(long,java.lang.String)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewUser(java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void IntParameterMustBePositive(long)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewUser(java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void StringMustNotBeNullOrEmpty(java.lang.String[])>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForUserByName(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForUserByName(java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void StringMustNotBeNullOrEmpty(java.lang.String[])>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: void updateUserWithPassword(long,java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: void executeUpdateTemplate(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.lang.String createHashedValueFromPassword(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: void updateUserWithPassword(long,java.lang.String)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.lang.String createHashedValueFromPassword(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.lang.String bytesToHex(byte[])>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.lang.String createHashedValueFromPassword(java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void StringMustNotBeNullOrEmpty(java.lang.String[])>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.lang.String bytesToHex(byte[])>	<com.coveros.training.persistence.PersistenceLayer: java.lang.String createHashedValueFromPassword(java.lang.String)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.authentication.RegistrationUtils: void saveToDatabase(java.lang.String,java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: void updateUserWithPassword(long,java.lang.String)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.authentication.RegistrationUtils: void saveToDatabase(java.lang.String,java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void IntParameterMustBePositive(long)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: long saveNewUser(java.lang.String)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForUserByName(java.lang.String)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: void updateUserWithPassword(long,java.lang.String)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.lang.String createHashedValueFromPassword(java.lang.String)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: void <init>()>	<com.coveros.training.persistence.PersistenceLayer: void <init>(javax.sql.DataSource)>
[<com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>
[<com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksById(long)>
[<com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional listBooks(java.lang.String,java.lang.String)>
[<com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function throwingFunctionWrapper(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function throwingFunctionWrapper(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>
[<com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksById(long)>
[<com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional listBooks(java.lang.String,java.lang.String)>
[<com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>
[<com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void StringMustNotBeNullOrEmpty(java.lang.String[])>
[<com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional listBooks(java.lang.String,java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional listAllBooks()>
[<com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.library.LibraryBookListSearchServlet: java.lang.String searchById(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksById(long)>
[<com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.library.LibraryBookListSearchServlet: java.lang.String searchById(java.lang.String)>	<com.coveros.training.helpers.CheckUtils: void IntParameterMustBePositive(long)>
[<com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.helpers.StringUtils: java.lang.String makeNotNullable(java.lang.String)>	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>
[<com.coveros.training.library.LibraryBookListSearchServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0]	<com.coveros.training.persistence.PersistenceLayer: void <init>()>	<com.coveros.training.persistence.PersistenceLayer: void <init>(javax.sql.DataSource)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: com.coveros.training.authentication.domainobjects.RegistrationResult processRegistration(java.lang.String,java.lang.String)>/new com.coveros.training.authentication.domainobjects.RegistrationResult/1]	<com.coveros.training.authentication.RegistrationUtils: com.coveros.training.authentication.domainobjects.RegistrationResult processRegistration(java.lang.String,java.lang.String)>	<com.coveros.training.authentication.domainobjects.RegistrationResult: void <init>(boolean,com.coveros.training.authentication.domainobjects.RegistrationStatusEnums,java.lang.String)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.domainobjects.Loan: com.coveros.training.library.domainobjects.Loan createEmpty()>/new com.coveros.training.library.domainobjects.Loan/0]	<com.coveros.training.library.domainobjects.Book: com.coveros.training.library.domainobjects.Book createEmpty()>	<com.coveros.training.library.domainobjects.Loan: void <init>(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,long,java.sql.Date)>
[<com.coveros.training.library.LibraryLendServlet: void <clinit>()>/new com.coveros.training.library.LibraryUtils/0, <com.coveros.training.library.domainobjects.Loan: com.coveros.training.library.domainobjects.Loan createEmpty()>/new com.coveros.training.library.domainobjects.Loan/0]	<com.coveros.training.library.domainobjects.Borrower: com.coveros.training.library.domainobjects.Borrower createEmpty()>	<com.coveros.training.library.domainobjects.Loan: void <init>(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,long,java.sql.Date)>
[<com.coveros.training.authentication.RegisterServlet: void <clinit>()>/new com.coveros.training.authentication.RegistrationUtils/0, <com.coveros.training.authentication.RegistrationUtils: com.coveros.training.authentication.domainobjects.PasswordResult isPasswordGood(java.lang.String)>/new com.coveros.training.authentication.domainobjects.PasswordResult/0]	<com.coveros.training.authentication.RegistrationUtils: com.coveros.training.authentication.domainobjects.PasswordResult isPasswordGood(java.lang.String)>	<com.coveros.training.authentication.domainobjects.PasswordResult: void <init>(com.coveros.training.authentication.domainobjects.PasswordResultEnums,java.lang.Double,java.lang.String,java.lang.String,java.lang.String)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.SqlData: void applyParametersToPreparedStatement(java.sql.PreparedStatement)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>
[<com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForUserByName(java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.SqlData: void applyParametersToPreparedStatement(java.sql.PreparedStatement)>
[<com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForUserByName(java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForUserByName(java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForUserByName(java.lang.String)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForUserByName(java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForUserByName(java.lang.String)>	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>
[<com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForUserByName(java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.SqlData: void applyParametersToPreparedStatement(java.sql.PreparedStatement)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowersById(long)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.SqlData: void applyParametersToPreparedStatement(java.sql.PreparedStatement)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowersById(long)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowersById(long)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowersById(long)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowersById(long)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowersById(long)>	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowersById(long)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional listAllBorrowers()>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.SqlData: void applyParametersToPreparedStatement(java.sql.PreparedStatement)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional listAllBorrowers()>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional listAllBorrowers()>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional listAllBorrowers()>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional listAllBorrowers()>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.authentication.LoginUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional areCredentialsValid(java.lang.String,java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.SqlData: void applyParametersToPreparedStatement(java.sql.PreparedStatement)>
[<com.coveros.training.authentication.LoginUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional areCredentialsValid(java.lang.String,java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.authentication.LoginUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional areCredentialsValid(java.lang.String,java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional areCredentialsValid(java.lang.String,java.lang.String)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.authentication.LoginUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional areCredentialsValid(java.lang.String,java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional areCredentialsValid(java.lang.String,java.lang.String)>	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>
[<com.coveros.training.authentication.LoginUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional areCredentialsValid(java.lang.String,java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksById(long)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.SqlData: void applyParametersToPreparedStatement(java.sql.PreparedStatement)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksById(long)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksById(long)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksById(long)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksById(long)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksById(long)>	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksById(long)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional listBooks(java.lang.String,java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.SqlData: void applyParametersToPreparedStatement(java.sql.PreparedStatement)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional listBooks(java.lang.String,java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional listBooks(java.lang.String,java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional listBooks(java.lang.String,java.lang.String)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional listBooks(java.lang.String,java.lang.String)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>	<com.coveros.training.persistence.SqlData: void applyParametersToPreparedStatement(java.sql.PreparedStatement)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>	<com.coveros.training.persistence.SqlData: void applyParametersToPreparedStatement(java.sql.PreparedStatement)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewBorrower(java.lang.String)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewBorrower(java.lang.String)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewBorrower(java.lang.String)>	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: long createLoan(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: long createLoan(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: long createLoan(com.coveros.training.library.domainobjects.Book,com.coveros.training.library.domainobjects.Borrower,java.sql.Date)>	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewBook(java.lang.String)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewBook(java.lang.String)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewBook(java.lang.String)>	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForLoanByBook(com.coveros.training.library.domainobjects.Book)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional runQuery(com.coveros.training.persistence.SqlData)>	<com.coveros.training.persistence.SqlData: void applyParametersToPreparedStatement(java.sql.PreparedStatement)>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForLoanByBook(com.coveros.training.library.domainobjects.Book)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.function.Function createExtractor(com.coveros.training.persistence.PersistenceLayer$ThrowingFunction)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForLoanByBook(com.coveros.training.library.domainobjects.Book)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForLoanByBook(com.coveros.training.library.domainobjects.Book)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForLoanByBook(com.coveros.training.library.domainobjects.Book)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForLoanByBook(com.coveros.training.library.domainobjects.Book)>	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>
[<com.coveros.training.library.LibraryUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForLoanByBook(com.coveros.training.library.domainobjects.Book)>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>
[<com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: void executeUpdateTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: void executeUpdateTemplate(java.lang.String,java.lang.String,java.lang.Object[])>	<com.coveros.training.persistence.SqlData: void applyParametersToPreparedStatement(java.sql.PreparedStatement)>
[<com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: void executeUpdateTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>	<com.coveros.training.persistence.SqlData: void applyParametersToPreparedStatement(java.sql.PreparedStatement)>
[<com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: void executeUpdateTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: void updateUserWithPassword(long,java.lang.String)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: void executeUpdateTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: void updateUserWithPassword(long,java.lang.String)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: void executeUpdateTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: void updateUserWithPassword(long,java.lang.String)>	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>
[<com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: void executeUpdateTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>
[<com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>	<com.coveros.training.persistence.SqlData: void applyParametersToPreparedStatement(java.sql.PreparedStatement)>
[<com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: java.sql.PreparedStatement prepareStatementWithKeys(com.coveros.training.persistence.SqlData,java.sql.Connection)>	<com.coveros.training.persistence.SqlData: void applyParametersToPreparedStatement(java.sql.PreparedStatement)>
[<com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewUser(java.lang.String)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>
[<com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewUser(java.lang.String)>	<com.coveros.training.persistence.SqlData: void <init>(java.lang.String,java.lang.String,java.util.function.Function,java.lang.Object[])>
[<com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.PersistenceLayer: long saveNewUser(java.lang.String)>	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>
[<com.coveros.training.authentication.RegistrationUtils: void <init>()>/new com.coveros.training.persistence.PersistenceLayer/0, <com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>
[<com.coveros.training.persistence.PersistenceLayer: java.util.Optional areCredentialsValid(java.lang.String,java.lang.String)>/new com.coveros.training.persistence.SqlData/0, <com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>/new com.coveros.training.persistence.ParameterObject/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.ParameterObject: void <init>(java.lang.Object,java.lang.Class)>
[<com.coveros.training.persistence.PersistenceLayer: java.util.Optional listBooks(java.lang.String,java.lang.String)>/new com.coveros.training.persistence.SqlData/0, <com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>/new com.coveros.training.persistence.ParameterObject/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.ParameterObject: void <init>(java.lang.Object,java.lang.Class)>
[<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksByTitle(java.lang.String)>/new com.coveros.training.persistence.SqlData/0, <com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>/new com.coveros.training.persistence.ParameterObject/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.ParameterObject: void <init>(java.lang.Object,java.lang.Class)>
[<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowerDataByName(java.lang.String)>/new com.coveros.training.persistence.SqlData/0, <com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>/new com.coveros.training.persistence.ParameterObject/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.ParameterObject: void <init>(java.lang.Object,java.lang.Class)>
[<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBorrowersById(long)>/new com.coveros.training.persistence.SqlData/0, <com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>/new com.coveros.training.persistence.ParameterObject/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.ParameterObject: void <init>(java.lang.Object,java.lang.Class)>
[<com.coveros.training.persistence.PersistenceLayer: java.util.Optional listAllBorrowers()>/new com.coveros.training.persistence.SqlData/0, <com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>/new com.coveros.training.persistence.ParameterObject/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.ParameterObject: void <init>(java.lang.Object,java.lang.Class)>
[<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchBooksById(long)>/new com.coveros.training.persistence.SqlData/0, <com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>/new com.coveros.training.persistence.ParameterObject/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.ParameterObject: void <init>(java.lang.Object,java.lang.Class)>
[<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForUserByName(java.lang.String)>/new com.coveros.training.persistence.SqlData/0, <com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>/new com.coveros.training.persistence.ParameterObject/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.ParameterObject: void <init>(java.lang.Object,java.lang.Class)>
[<com.coveros.training.persistence.PersistenceLayer: java.util.Optional searchForLoanByBook(com.coveros.training.library.domainobjects.Book)>/new com.coveros.training.persistence.SqlData/0, <com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>/new com.coveros.training.persistence.ParameterObject/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.ParameterObject: void <init>(java.lang.Object,java.lang.Class)>
[<com.coveros.training.persistence.PersistenceLayer: long executeInsertTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0, <com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>/new com.coveros.training.persistence.ParameterObject/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.ParameterObject: void <init>(java.lang.Object,java.lang.Class)>
[<com.coveros.training.persistence.PersistenceLayer: void executeUpdateTemplate(java.lang.String,java.lang.String,java.lang.Object[])>/new com.coveros.training.persistence.SqlData/0, <com.coveros.training.persistence.SqlData: void addParameter(java.lang.Object,java.lang.Class)>/new com.coveros.training.persistence.ParameterObject/0]	<com.coveros.training.persistence.SqlData: void generateParams(java.lang.Object[])>	<com.coveros.training.persistence.ParameterObject: void <init>(java.lang.Object,java.lang.Class)>
